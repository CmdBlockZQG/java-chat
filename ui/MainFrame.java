package ui;

import client.User;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

// 主窗口
public class MainFrame extends JFrame {
    private JPanel contentPane; // 主容器
    private JList<UserSession> sessionList; // 在线用户列表
    private JLabel idLabel; // 展示用户id的标签
    private JLabel nameLabel; // 展示用户名的标签
    private JPanel chatPanel; // 群聊天面板

    private void createUIComponents() {
        // 创建主窗口的面板
        ChatPanel cp = new ChatPanel(this, ChatPanel.TARGET_GROUP);
        chatPanel = cp.getPanel();
        Main.groupPanel = cp;
    }

    /**
     * 更新ui列表
     */
    void updateUserSessionList() {
        // 使用sessionList的值集合
        sessionList.setListData(Main.userSessions.values().toArray(new UserSession[0]));
    }

    /**
     * 构造主窗口
     */
    public MainFrame() {
        super("Java Chat"); // 标题
        $$$setupUI$$$();
        setContentPane(contentPane); // 设置主容器
        setLocationRelativeTo(null); // 默认位置屏幕中央
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // 关闭时退出

        sessionList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); // 在线用户列表不允许多选

        // 展示登陆用户的id和名字
        idLabel.setText(String.valueOf(Main.userId));
        nameLabel.setText(Main.userName);

        // 处理双击列表项打开对应私聊窗口事件
        sessionList.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) { // 双击列表项
                    User user = sessionList.getSelectedValue().user;
                    if (Main.chatPanels.containsKey(user.id)) {
                        Main.chatPanels.get(user.id).parent.requestFocus(); // 如果私聊窗口已经打开，则聚焦过去
                    } else {
                        new DmFrame(user.id).requestFocus(); // 打开私聊窗口，并聚焦过去
                    }
                }
            }
        });
    }

    /**
     * 显示主窗口
     */
    public void open() {
        // 调整大小并展示
        pack();
        setVisible(true);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(5, 5, 5, 5), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(10);
        label1.setHorizontalTextPosition(11);
        label1.setText("ID：");
        contentPane.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        idLabel = new JLabel();
        idLabel.setText("");
        contentPane.add(idLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(117, 0), null, 0, false));
        nameLabel = new JLabel();
        nameLabel.setText("");
        contentPane.add(nameLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(117, 0), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("昵称：");
        contentPane.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        contentPane.add(chatPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        contentPane.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        sessionList = new JList();
        scrollPane1.setViewportView(sessionList);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
